// Copyright 2012 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Extracted from observe-js/src/observe.js

module.exports = exports = function diffObjectFromOldObject(object, oldObject) {
  var added = {};
  var removed = {};
  var changed = {};
  var oldObjectHas = {};

  for (var prop in oldObject) {
    var newValue = object[prop];

    if (newValue !== undefined && newValue === oldObject[prop])
      continue;

    if (!(prop in object)) {
      removed[prop] = undefined;
      continue;
    }

    if (newValue !== oldObject[prop])
      changed[prop] = newValue;
  }

  for (var prop in object) {
    if (prop in oldObject)
      continue;

    added[prop] = object[prop];
  }

  if (Array.isArray(object) && object.length !== oldObject.length)
    changed.length = object.length;

  return {
    added: added,
    removed: removed,
    changed: changed
  };
}
