module.exports = exports = ViewscreenConnection

var env = require('../env')
var protocol = require('../protocol')

function ViewscreenConnection(config, state){
  if (state.connection) state.connection.presentFrame();
  
  // Done
  if (state.error) return;
  if (state.isConnected) return state.connection;
  
  // Nothing to do
  // state.isConnecting = !(state.connection || state.error) || state.isConnecting == null;
  if (state.isConnecting){
    if (state.onConnecting) state.onConnecting(state);
    if (config.onConnecting) config.onConnecting(state);
    return;
  }
  
  // Start
  state.isConnecting = true;
  delete state.error;
  
  env.setup(function(error){
    state.error = error;
    if (state.error){
      if (state.onError) state.onError(state);
      if (config.onError) config.onError(state);
      return;
    }
    
    state.connection = new protocol.Connection();
    state.connection.client.on('error', function(error){
      state.error = error;
      if (state.onError) state.onError(state);
      if (config.onError) config.onError(state);
    })
    state.connection.client.on('connect', function(){
      state.connection.client.on('input did change', function(){
        state.input = state.connection.input
      });
      state.connection.client.once('input did change', function(){
        state.isConnecting = false;
        state.isConnected = true;
        
        if (state.onConnect) state.onConnect(state)
        if (config.onConnect) config.onConnect(state)
      });
    });
  });
}
