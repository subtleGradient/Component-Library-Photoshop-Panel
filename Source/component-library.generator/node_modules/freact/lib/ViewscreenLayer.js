module.exports = exports = ViewscreenLayer

var Config = require('./Config')
var Defaults = require('./Defaults')

function ViewscreenLayer(config, state){
  var root = state.getRoot && state.getRoot() || state
  
  if (root.executionIndex !== root._ViewscreenLayer_lastExecution) delete root._ViewscreenLayer_layerId;
  root._ViewscreenLayer_lastExecution = root.executionIndex;
  
  if (!root._ViewscreenLayer_layerId) root._ViewscreenLayer_layerId = 1000
  state.layerId = root._ViewscreenLayer_layerId++
  
  Defaults(ViewscreenLayer.prototype, state)
  Config(config, state)
  
  state.connection.setLayerMetadata(state.layerId, state.zIndex, state.disabled?0:1, state.x, state.y, state.width, state.height, state.opacity, state.scaleX, state.scaleY, state.textureScaleX, state.textureScaleY, state.rotationX, state.rotationY, state.rotationZ);
  state.connection.setLayerColor(state.layerId, state.color.r,state.color.g,state.color.b,state.color.a);
  if ('imagePath' in config){
    if (!('_setLayerTexturePathCallback' in config)) state._setLayerTexturePathCallback = function(error, width, height){
      state.connection.presentFrame();
    };
    state.connection.setLayerTexturePath(state.layerId, state.imagePath||__dirname + "/SealOfApproval.png", state._setLayerTexturePathCallback);
  }
  state.connection.setLayerContainment(state.layerId, state.parentLayerId, state.clip||true);
}

ViewscreenLayer.prototype = {
  constructor: ViewscreenLayer,
  connection: null,
  parentLayerId: 0,
  layerId: 999,
  zIndex: 0,
  enabled: true,
  disabled: false,
  x: 0,
  y: 0,
  width: 444,
  height: 444,
  opacity: 1,
  scaleX: 1,
  scaleY: 1,
  textureScaleX: 1,
  textureScaleY: 1,
  rotationX: 0,
  rotationY: 0,
  rotationZ: 0,
  color: {r:1, g:1, b:1, a:1},
}
