function MockWebSocket(url){}
MockWebSocket.prototype = {
  constructor:MockWebSocket,
  send: function(message){
    var self = this;
    setTimeout(function(){
      self.onmessage({data:message})
    },0);
  },
  close: function(){
    setTimeout(this.onclose.bind(this),0);
  },
  onmessage: function(){},
  onopen: function(){},
  onclose: function(){},
  onerror: function(){}
}

require('tap').test(function tap(t){
  
  var WebSocketConnection = require('../lib/WebSocketConnection');
  
  t.test('exists', function tap(t){
    t.ok(WebSocketConnection)
    t.is(typeof WebSocketConnection, 'function')
    t.end()
  })
  t.test('works', function tap(t){
    WebSocketConnection.WebSocket = MockWebSocket;
    
    function WebSocketConnectionTest(config, state){
      console.log('state.onchange')
      
      if (state.isOpen === false) t.end();
      
      WebSocketConnection(config, state)
      
      if (state.isOpen) state.socket.close();
    }
    
    var config = {url:"ws://echo.websocket.org", message:"Hello World"};
    var state = {};
    state.onchange = function(){
      WebSocketConnectionTest(config, state)
    }
    
    state.onchange()
    
  })
});
