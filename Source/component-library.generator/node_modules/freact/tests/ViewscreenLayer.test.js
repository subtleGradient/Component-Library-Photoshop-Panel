require('tap').test(function tap(t){
  
  var Config = require('../lib/Config')
  var Iterator = require('../lib/Iterator')
  var Layer = require('../lib/ViewscreenLayer')
  
  var connection = {}
  MockConnection({__noSuchMethod__:__noSuchMethod__}, connection)
  
  t.test('exists', function tap(t){
    t.ok(Layer)
    t.end()
  })
  
  t.test('does not modify config', function tap(t){
    var config = {connection:connection}
    var state = {}
    var configCount = Object.keys(config).length
    
    Layer(config, state)
    
    t.is(Object.keys(config).length, configCount)
    
    t.end()
  })
  
  t.test('Layer iteration support', function tap(t){
    
    var config = {execute:Iterator, iterations:3, graph:{
      IteratorVars_1:{execute:Iterator.Vars},
      Layer_1:{execute:[Config, Layer], connection:connection, $layerId:function(state){return 1000 + state.getParent().IteratorVars_1.index}}
    }}
    var state = {}
    
    config.execute(config, state)
    
    t.end()
  })
  
})

////////////////////////////////////////////////////////////////////////////////

function MockConnection(config, connection){
  if (!connection.setLayerMetadata) connection.setLayerMetadata = config.__noSuchMethod__.bind(connection, "setLayerMetadata")
  if (!connection.setLayerColor) connection.setLayerColor = config.__noSuchMethod__.bind(connection, "setLayerColor")
  if (!connection.presentFrame) connection.presentFrame = config.__noSuchMethod__.bind(connection, "presentFrame")
  if (!connection.setLayerTexturePath) connection.setLayerTexturePath = config.__noSuchMethod__.bind(connection, "setLayerTexturePath")
  if (!connection.setLayerContainment) connection.setLayerContainment = config.__noSuchMethod__.bind(connection, "setLayerContainment")
}
function __noSuchMethod__(name){
  var state = this
  var args = Array.prototype.slice.call(arguments, 1)
  console.log('__noSuchMethod__', name, args)
}
